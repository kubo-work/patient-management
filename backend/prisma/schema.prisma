generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model patients {
  id              Int               @id @default(autoincrement())
  name            String
  sex             Sex               @default(no_answer)
  tel             String
  address         String
  email           String            @unique
  password        String
  birth           DateTime
  created_at      DateTime          @default(now())
  updated_at      DateTime          @default(now())
  medical_records medical_records[]
}

model doctors {
  id              Int               @id @default(autoincrement())
  name            String
  password        String
  email           String            @unique
  created_at      DateTime          @default(now())
  updated_at      DateTime          @default(now())
  medical_records medical_records[]
}

model medical_records {
  id                 Int                  @id @default(autoincrement())
  patient_id         Int
  doctor_id          Int
  medical_memo       String
  doctor_memo        String
  examination_at     DateTime             @default(now())
  created_at         DateTime             @default(now())
  updated_at         DateTime             @default(now())
  delFlag            delFlag              @default(ACTIVE)
  medical_categories medical_categories[]
  doctor             doctors              @relation(fields: [doctor_id], references: [id], onDelete: SetDefault)
  patient            patients             @relation(fields: [patient_id], references: [id], onDelete: SetDefault)
}

model categories {
  id                 Int                  @id @default(autoincrement())
  treatment          String
  created_at         DateTime             @default(now())
  updated_at         DateTime             @default(now())
  parent_id          Int?
  parent             categories?          @relation("CategoryParent", fields: [parent_id], references: [id])
  children           categories[]         @relation("CategoryParent")
  medical_categories medical_categories[]
}

model medical_categories {
  id                Int             @id @default(autoincrement())
  medical_record_id Int
  category_id       Int
  created_at        DateTime        @default(now())
  updated_at        DateTime        @default(now())
  delFlag           delFlag         @default(ACTIVE)
  categories        categories      @relation(fields: [category_id], references: [id], onDelete: Cascade)
  medical_records   medical_records @relation(fields: [medical_record_id], references: [id], onDelete: Cascade)
}

model session {
  sid    String   @id @db.VarChar
  sess   Json     @db.Json
  expire DateTime @db.Timestamp(6)

  @@index([expire], map: "IDX_session_expire")
}

enum Sex {
  no_answer
  man
  woman
  neither
}

enum delFlag {
  ACTIVE
  DELETED
}
